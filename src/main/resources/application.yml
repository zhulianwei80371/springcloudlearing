server:
    port: 17813
    servlet:
        context-path: /
spring:
    servlet:
        multipart:
            max-file-size: 100MB
            max-request-size: 100MB
    application:
        name: springcloudlearing
    datasource:
#        type: com.mysql.cj.jdbc.MysqlDataSource
        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.253.129:33306/insound?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
        username: root
        password: root
        druid:
            max-active: 1024
            initial-size: 5
            min-idle: 5
            max-wait: 60000
#            filter:
#                wall:
#                    enable: true
#                    db-type: mysql
#                stat:
#                    enable: true
#                    db-type: mysql
        url: jdbc:p6spy:mysql://192.168.253.129:33306/insound?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
        driver-class-name: com.p6spy.engine.spy.P6SpyDriver


decorator:
    datasource:
        p6spy:
            #日志格式
            log-format: time:%(executionTime) || sql:%(sql)
            #自定义日志类
            logging: custom
            custom-appender-class: com.baomidou.mybatisplus.extension.p6spy.StdoutLogger


management:
    #开启信息可显示
    info:
        env:
            enabled: true
    endpoints:
        web:
            exposure:
                include: "*"

    endpoint:
        health:
            show-details: always
info:
    name: "zhulw"
    sex: "femal"
    birth: "22"
    info:
        app:
            encoding: "@project.build.sourceEncoding@"
            java:
                source: "@java.version@"
                target: "@java.version@"
mybatis-plus:
    configuration:
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
        default-enum-type-handler: com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler
    global-config:
        db-config:
            logic-delete-field: deleted
            logic-delete-value: 1
            logic-not-delete-value: 0
    mapper-locations: classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/*/*.xml
    type-enums-package: org.example.springcloudlearing.enums.vip
springdoc:
    swagger-ui:
        path: /swagger-ui.html
        tags-sorter: alpha
        #operations-sorter: order
    api-docs:
        path: /v3/api-docs
    group-configs:
        - group: 'default'
          display-name: '测试'
          paths-to-match: '/**'
          packages-to-scan: org.example.springcloudlearing.controller
#    default-flat-param-object: true

knife4j:
    enable: true
    setting:
        language: zh_cn
        swagger-model-name: 实体类列表
    documents:
        - name: 标题1
          locations: classpath:markdown/*
          group: 测试
        - name: 标题2
          locations: classpath:markdown1/*
          group: 用户模块
    basic:
        enable: false
        username: abc
        password: 123
    insight:
        enable: true
        service-name: boot3
        secret: S6CsnS8AnPVyb8vvChcdXm4R3p6A6KlAISxBg3IIEgk=
        server: http://localhost:10086
        namespace: spring3


logging:
    level:
        root: debug
        org:
            springframework:
                web: debug
            hibernate: debug
            mybatis: debug

mybatis:
    table:
        #create系统启动后，会将所有的表删除掉，然后根据model中配置的结构重新建表，该操作会破坏原有数据;
        #update系统会自动判断哪些表是新建的．哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据;
        #add新增表/新增字段/新增索引新增唯一约束的功能，不做做修改和删除(只在版本1.0.9.RELEASE及以上支持);
        #none系统不做任何处理;
        auto: update
    model:
        #扫描用于创建表的对象的包名 填入domain包路径
        pack: org.example.springcloudlearing.entity.vip
    database:
        #数据库类型目前只支持mysql
        type: mysql

